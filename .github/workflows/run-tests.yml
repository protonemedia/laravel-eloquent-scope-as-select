name: run-tests

on: [push, pull_request]

jobs:
    test:
        runs-on: ubuntu-latest
        strategy:
            fail-fast: true
            matrix:
                php: [8.0, 7.4]
                laravel: [8.*, 7.*]
                dependency-version: [prefer-lowest, prefer-stable]
                include:
                    -   laravel: 8.*
                        testbench: 6.*
                    -   laravel: 7.*
                        testbench: 5.*

        name: P${{ matrix.php }} - L${{ matrix.laravel }} - ${{ matrix.dependency-version }}

        services:
            mysql:
                image: mysql:5.7
                env:
                    MYSQL_ALLOW_EMPTY_PASSWORD: no
                    MYSQL_USER: protone_media_db_test
                    MYSQL_DATABASE: protone_media_db_test
                    MYSQL_PASSWORD: secret
                    MYSQL_ROOT_PASSWORD: secret
                ports:
                    - 3306
                options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3


        steps:
            -   name: Checkout code
                uses: actions/checkout@v2

            -   name: Cache dependencies
                uses: actions/cache@v2
                with:
                    path: ~/.composer/cache/files
                    key: dependencies-laravel-${{ matrix.laravel }}-php-${{ matrix.php }}-composer-${{ hashFiles('composer.json') }}

            -   name: Setup PHP
                uses: shivammathur/setup-php@v2
                with:
                    php-version: ${{ matrix.php }}
                    extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick, mysql, mysqli, pdo_mysql
                    coverage: none

            -   name: Install dependencies
                run: composer update --with='laravel/framework:${{ matrix.laravel }}' --with='orchestra/testbench:${{ matrix.testbench }}' --${{ matrix.dependency-version }} --prefer-dist --no-interaction

            -   name: Execute tests
                run: vendor/bin/phpunit
                env:
                    DB_DATABASE: protone_media_db_test
                    DB_USERNAME: protone_media_db_test
                    DB_PASSWORD: secret
                    DB_PORT: ${{ job.services.mysql.ports[3306] }}
